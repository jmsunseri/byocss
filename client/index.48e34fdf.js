import{S as e,i as t,s as n,c as a,f as i,m as o,t as l,n as s,o as r,e as p,a as c,b as d,d as f,g as m,h as u,j as h,k as b,l as g,r as $}from"./client.9893f0c7.js";import k from"./example.330ac7d6.js";import{C as x,a as v}from"./CodeExample.5a6c73ed.js";function y(e){let t,n,x,y,w;return n=new k({}),y=new v({props:{exampleHTML:e[3],exampleTheme:e[4]}}),{c(){t=p("div"),a(n.$$.fragment),x=c(),a(y.$$.fragment),this.h()},l(e){t=d(e,"DIV",{slot:!0,class:!0});var a=f(t);i(n.$$.fragment,a),x=m(a),i(y.$$.fragment,a),a.forEach(u),this.h()},h(){h(t,"slot","examples"),h(t,"class","flex flex-col gap-3")},m(e,a){b(e,t,a),o(n,t,null),g(t,x),o(y,t,null),w=!0},p:$,i(e){w||(l(n.$$.fragment,e),l(y.$$.fragment,e),w=!0)},o(e){s(n.$$.fragment,e),s(y.$$.fragment,e),w=!1},d(e){e&&u(t),r(n),r(y)}}}function w(e){let t,n;return t=new x({props:{props:e[0],slots:e[1],themeProps:e[2],description:"The link button allows the user to navigate to another page on the web.",componentName:"Link Button",$$slots:{examples:[y]},$$scope:{ctx:e}}}),{c(){a(t.$$.fragment)},l(e){i(t.$$.fragment,e)},m(e,a){o(t,e,a),n=!0},p(e,[n]){const a={};32&n&&(a.$$scope={dirty:n,ctx:e}),t.$set(a)},i(e){n||(l(t.$$.fragment,e),n=!0)},o(e){s(t.$$.fragment,e),n=!1},d(e){r(t,e)}}}function B(e){return[[{name:"variant",type:"string",default:"'default'",description:"This defines which variant of the link button component from your theme configuration will be applied."},{name:"css",type:"string",description:"Extra css classes you would like to have applied to the main link button component."},{name:"href",type:"string",description:"Hyperlink reference."},{name:"disabled",type:"boolean",default:"false",description:'Will prevent the link from navigating you to the href.  When disabled the component will look for a variant either called "{variant}-disabled" or "disabled"'},{name:"on:click",type:"VoidFunction",description:"A function that will be called on click of the button."}],[{description:"This will be placed to the right of an icon (if provided) and to the left of a tailing icon (if provided)."},{name:"icon",description:"An icon that will be placed on the left of the link button."},{name:"trailingIcon",description:"An icon that will be placed on the right side of the link button."}],[{name:"icon",type:"string | object",description:"It can be a single string containing all styles applied to the icon or \n      it can be an object broken up in to multiple props."},{name:"style",type:"string | object",description:'The name of this prop could be anything other than "icon".  \n      It can be a single string containing all styles applied to the link button or \n      it can be an object broken up in to multiple props.'}],'<div class="flex flex-row gap-3">\n  <LinkButton variant="example-default" href="./link-button">A Link</LinkButton>\n  <LinkButton variant="example-default" href="./link-button">\n    <span slot="icon">\n      <BrandGithub size="1.5rem" />\n    </span>\n  </LinkButton>\n  <LinkButton variant="example-default" href="./link-button">\n    Notifications\n    <span slot="trailingIcon">\n      <Bell size="1.5rem" />\n    </span>\n  </LinkButton>\n  <LinkButton disabled variant="example-default" href="./link-button">Disabled</LinkButton>\n</div>',"linkButtons: {\n  'example-default': {\n    style: 'text-blue-500 hover:bg-blue-300 flex flex-row gap-1',\n  },\n  'example-default-disabled': { style: 'text-gray-300 cursor-not-allowed' },\n}"]}export default class extends e{constructor(e){super(),t(this,e,B,w,n,{})}}
